@using System.Threading;
@using Insure.Services
@using Resource.Services
@using System.Collections.ObjectModel;
@inject grpcInsureService.grpcInsureServiceClient insureServiceClient;
@inject MasterService masterService;
@inject SettingService settingService;
@inject IJSRuntime JsRuntime;
@inject ISnackbar Snackbar;
@inject IDialogService DialogService;
@inject NavigationManager NavManager

<MyAppBarForm Title="Thanh toán" ShowCloseButton=true>
    <ChildContent>
        <MyPanels>
            <!--Thông tin chương trình bảo hiểm-->
            <MyPanel Title="Thông tin chương trình bảo hiểm">
                <div class="container-fluid p-0">
                    <!--ProductName-->
                    <div class="row m-1 m-lg-2 align-items-center">
                        <div class="col">
                            <MudAvatar Size="Size.Large" Color="Color.Primary" Variant="Variant.Outlined" Image="@("data:image/png;base64," + Convert.ToBase64String(Model.LogoContent))" Alt="Vendor Avatar" />
                        </div>
                        <div class="col font-weight-bold text-right">
                            @Model.ProductName
                        </div>
                    </div>

                    <!--VendorName-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Nhà cung cấp
                        </div>
                        <div class="col font-weight-bold text-right">
                            @Model.VendorName
                        </div>
                    </div>

                    <!--EffectiveSttDate-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Ngày hiệu lực
                        </div>
                        <div class="col font-weight-bold text-right">
                            @Model.EffectiveSttDate.ToString("dd/MM/yyyy")
                        </div>
                    </div>
                    <!--EffectiveEndDate-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Ngày kết thúc
                        </div>
                        <div class="col font-weight-bold text-right">
                            @Model.EffectiveEndDate.ToString("dd/MM/yyyy")
                        </div>
                    </div>


                </div>
            </MyPanel>

            <!--Thông tin chủ hợp đồng-->
            <MyPanel Title="Thông tin chủ hợp đồng">
                <div class="container-fluid p-0">
                    <!--CusFullname-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Họ và tên chủ xe
                        </div>
                        <div class="col font-weight-bold text-right">
                            @Model.CusFullname
                        </div>
                    </div>

                    <!--CusPhone-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Số điện thoại
                        </div>
                        <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:larger">
                            @Model.CusPhone
                        </div>
                    </div>
                    <!--CusEmail-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Email
                        </div>
                        <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:larger">
                            @Model.CusEmail
                        </div>
                    </div>

                    <!--LicensePlate-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Biển số xe
                        </div>
                        <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:x-large">
                            @Model.LicensePlate
                        </div>
                    </div>

                    <!--BusinessTypeName-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Mục đích kinh doanh
                        </div>
                        <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:x-large">
                            @Model.BusinessTypeName
                        </div>
                    </div>

                    <!--CarTypeName-->
                    <div class="row m-1 m-lg-2">
                        <div class="col text-left">
                            Loại xe
                        </div>
                        <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:x-large">
                            @Model.CarTypeName
                        </div>
                    </div>

                    @if (Model.IsBySeat)
                    {
                        <div class="row m-1 m-lg-2">
                            <div class="col text-left">
                                Số chỗ ngồi
                            </div>
                            <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:x-large">
                                @Model.SeatCount.ToString("N0")
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row m-1 m-lg-2">
                            <div class="col text-left">
                                Số tấn
                            </div>
                            <div class="col font-weight-bold text-right text-blue" style="font-weight:700; font-size:x-large">
                                @Model.Tonage.ToString("N1")
                            </div>
                        </div>
                    }

                </div>
            </MyPanel>

            <!--Thông tin xe-->
            <MyPanel Title="Đồng ý mua bảo hiểm">
                <div class="container-fluid p-0">
                    <!--IsAcceptBuy-->
                    <div class="row m-1 m-lg-2" style="text-align: justify; text-justify: inter-word; background-color: #F5F5F5">
                        <div class="col-1 p-0">
                            <MyCheckBox @bind-Checked=@IsAcceptBuy />
                        </div>
                        <div class="col-11 py-1">
                            @((MarkupString)Model.BuyPolicy)
                        </div>
                    </div>
                </div>
            </MyPanel>
        </MyPanels>
        <!--Lưu ý-->
        <p class="text-muted text-justify m-3">
            Lưu ý: Giấy chứng nhận bảo hiểm bắt buộc và trách nhiệm dân sự và bảo hiểm tự nguyện chủ xe mô tô - xe gắn máy
            được cấp Giấy chứng nhận bảo hiểm điện tử qua email <span class="text-blue font-weight-bold">@Model.CusEmail</span> hoặc tin nhắn SMS
            qua số điện thoại <span class="text-blue font-weight-bold">@Model.CusPhone</span>
        </p>
    </ChildContent>
    <ActionButtons>
        <div class="d-flex align-end">
            <MudText Typo="Typo.h5" Style="font-weight: bold; color: #2453c4">@(Model.PaymentAmount.ToString("N0") + "đ")</MudText>
            <MudText Typo="Typo.inherit" Class="text-muted ml-1" Style="font-weight: bold; color: gray">/năm</MudText>
        </div>
        <div>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.ShoppingCartCheckout" OnClick="CreateSO">Thanh toán</MudButton>
        </div>
    </ActionButtons>
</MyAppBarForm>



@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public SaleOrderModel Model { get; set; } = new SaleOrderModel();
    //Master
    //
    bool IsAcceptBuy = false;

    //OnInitializedAsync
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();


    }
    bool Validate_Main()
    {
        //RefOwnerFullname
        if (!IsAcceptBuy)
        {
            Snackbar.Add("Bạn chưa chọn đồng ý mua bảo hiểm", Severity.Error);
            return false;
        }
        //
        return true;
    }

    async void CreateSO()
    {
        try
        {
            //Validate
            if (!Validate_Main()) return;

            //Init Order
            //Request
            var request = new InitOrder_Request();
            var Credential = new Insure.Services.UserCredential()
                {
                    Username = WebUserCredential.Username,
                    RoleID = WebUserCredential.RoleID,
                    AccessToken = WebUserCredential.AccessToken,
                    ApiKey = WebUserCredential.ApiKey
                };
            request.Credential = Credential;
            // Convert to DB row
            request.Record = new grpcSaleOrderModel();
            ClassHelper.CopyPropertiesDataDateConverted(Model, request.Record);
            // Call api
            var response = await insureServiceClient.InitOrderAsync(request);
            // Success
            if (response == null || response.ReturnCode != GrpcReturnCode.OK)
            {
                Snackbar.Add("Khởi tạo thanh toán thất bại", Severity.Error);
                return;
            }

            //Request payment
            string paymentLink = "";
            var minPaymentAmount = await settingService.GetDouble1("018");
            if (minPaymentAmount == 0) minPaymentAmount = 5000.0;
            if (Model.PaymentAmount <= minPaymentAmount)
            {
                var internalPaymentUrl = await settingService.GetString1("019");
                paymentLink = $@"{internalPaymentUrl}{response.InitOrderToken}/{response.TransactionID}";
            }
            else
            {
                var internalPaymentUrl = await settingService.GetString1("006");
                paymentLink = $@"{internalPaymentUrl}{response.InitOrderToken}/{response.TransactionID}/VnPay";
            }
            await JsRuntime.InvokeVoidAsync("open", paymentLink, "_blank");

            //go to product list
            var ret = new MyDialogResult();
            ret.IsCloseAll = true;
            //
            MudDialog.Close(ret);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }

    //
}

