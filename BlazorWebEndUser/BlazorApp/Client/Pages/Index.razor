@page "/"
@page "/{ProductID}/{DiscountCode}"
@using Insure.Services
@using System.Collections.ObjectModel;
@inject grpcInsureService.grpcInsureServiceClient insureServiceClient;
@inject MasterService masterService;
@inject IJSRuntime JsRuntime;
@inject ISnackbar Snackbar
@inject IDialogService DialogService


<MudTabs Elevation="0"
         Rounded="true"
         Centered=true
         ApplyEffectsToContainer="true"
         PanelClass="p-0 p-lg-6"
         Class="m-auto"
         Style="@($"max-width:var(--mysize-maxwidth);")">
    <MudTabPanel Text=@Tab1Text Icon="@Icons.Filled.AddShoppingCart" Style="font-size:medium">
        <div class="productlist m-1 m-md-4">
            <!--Xe gắn máy-->
            <TNSD01_Compact ProductID="TNDS_HV" />
            <TNSD01_Compact ProductID="TNDS_BM" />
        </div>
    </MudTabPanel>
    <MudTabPanel Text=@Tab2Text Icon="fa fa-certificate" Style="font-size:medium">
        <div class="m-1 m-md-4">
            <CertificateList />
        </div>
    </MudTabPanel>
</MudTabs>

@code {
    [Parameter] public string ProductID { get; set; } = "";
    [Parameter] public string DiscountCode { get; set; } = "";

    //
    string Tab1Text = "&nbsp;&nbsp;Mua bảo hiểm&nbsp;&nbsp;";
    string Tab2Text = "Giấy chứng nhận&nbsp;";
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // Get browser info
        await Get_BrowserInfo();

        if (BrowserInfo.IsMobile)
        {
            Tab1Text = "Mua bảo hiểm";
            Tab2Text = "Chứng nhận";
        }

        if (!string.IsNullOrWhiteSpace(ProductID))
        {
            SelectBuy();
        }
    }

    async Task Get_BrowserInfo()
    {
        var info = await JsRuntime.InvokeAsync<BrowserDimension>("getDimensions");
        if (info != null)
        {
            BrowserInfo.Height = info.Height;
            BrowserInfo.Width = info.Width;
            if (BrowserInfo.Width <= 768)
            {
                BrowserInfo.IsMobile = true;
            }
        }
    }

    async void SelectBuy()
    {
        var parameters = new DialogParameters();
        parameters.Add("ProductID", ProductID);
        parameters.Add("DiscountCode", DiscountCode);
        //
        var result = await DialogService.Show<TNSD01_SO_Step1>("", parameters, MyOptions.ShowAppbarOptions()).Result;
        if (!result.Cancelled && result.Data != null)
        {
            var retModel = (ProductModel)result.Data;
        }
    }
}

