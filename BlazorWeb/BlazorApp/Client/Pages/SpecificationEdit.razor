@using TinyMCE.Blazor
@inject MasterService masterService;
@inject ISnackbar Snackbar

<style>
    .tox .tox-dialog-wrap {
        z-index: 5000 !important;
    }

    .tox-tinymce-aux {
        z-index: 5000;
    }
</style>


<MyPopupEdit Title="Nhập đặc tả sản phẩm"
             T="SpecificationModel"
             Model="DspModel"
             OnCancelClick="OnCancel"
             OnSubmitClick="OnSubmit">

    <MudTextField @ref="@RefTitle" Label="Tiêu đề" @bind-Value="DspModel.Title" For="@(() => DspModel.Title)" AutoFocus=true  Style="font-weight:bold"/>
    <br />
    <Editor Id="productEditor"
            Inline=false
            CloudChannel="5"
            @bind-Value="DspModel.Content"
            Field="@(() => DspModel.Content)"
            Disable=false
            JsConfSrc="tinyMCEconfig"
            ApiKey="drl7u5czy5p8ubduqdrt6t6v5bhf1gplqh32boqwfoxzz7ud"
            ClassName="tinymce-wrapper" />

</MyPopupEdit>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public SpecificationModel Model { get; set; }
    //
    private Dictionary<string, object> editorConf = new Dictionary<string, object>{
       { "menubar", false },
       {"height",600 },
       { "plugins", "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste imagetools wordcount" },
       {"toolbar","bold italic underline strikethrough cut copy paste pastetext pasteword alignleft aligncenter alignright alignjustify formatselect fontselect fontsizeselect bullist numlist outdent indent blockquote undo redo link unlink anchor image cleanup code forecolor backcolor hr removeformat visualaid superscript subscript" }
    };
    //
    SpecificationModel DspModel;
    MudTextField<string> RefTitle;
    // Master
    //Selected
    //
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        //Display data
        ClassHelper.CopyPropertiesData(Model, DspModel);
        DspModel = Model;
    }
    //Cancel
    private void OnCancel()
    {
        MudDialog.Cancel();
    }
    //Submit
    private void OnSubmit()
    {
        //Validate
        if (!Validate()) return;

        Model = DspModel;

        //Return changed
        MudDialog.Close(DialogResult.Ok(Model));
    }

    bool Validate()
    {
        //Title
        if (string.IsNullOrWhiteSpace(DspModel.Title))
        {
            Snackbar.Add("Chưa nhập tiêu đề", Severity.Error);
            if(RefTitle != null) RefTitle.FocusAsync();
            return false;
        }
        //Content
        if (string.IsNullOrWhiteSpace(DspModel.Content))
        {
            Snackbar.Add("Chưa nhập nội dung", Severity.Error);
            return false;
        }
        //
        return true;
    }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        //Load master
        await Task.FromResult(0);

    }


}
